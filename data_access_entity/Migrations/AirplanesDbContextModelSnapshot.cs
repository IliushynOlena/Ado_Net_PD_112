// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _07_EF_example;

namespace data_access_entity.Migrations
{
    [DbContext(typeof(AirplanesDbContext))]
    partial class AirplanesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("_07_EF_example.Entities.Airplane", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MaxPassangers")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Airplanes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MaxPassangers = 1200,
                            Model = "Antonov 125"
                        },
                        new
                        {
                            Id = 2,
                            MaxPassangers = 1300,
                            Model = "Boeing 747"
                        });
                });

            modelBuilder.Entity("_07_EF_example.Entities.Client", b =>
                {
                    b.Property<int>("CredentialsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("FirstName");

                    b.HasKey("CredentialsId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Passengers");

                    b.HasData(
                        new
                        {
                            CredentialsId = 1,
                            Birthday = new DateTime(2000, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mukola@gmail.com",
                            Name = "Mukola"
                        },
                        new
                        {
                            CredentialsId = 2,
                            Birthday = new DateTime(2005, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "olga@gmail.com",
                            Name = "Olga"
                        });
                });

            modelBuilder.Entity("_07_EF_example.Entities.Flight", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AirplaneId")
                        .HasColumnType("int");

                    b.Property<string>("ArrivalCity")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartureCity")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Number");

                    b.HasIndex("AirplaneId");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            Number = 1,
                            AirplaneId = 1,
                            ArrivalCity = "Lviv",
                            ArrivalTime = new DateTime(2023, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartureCity = "Kyiv",
                            DepartureTime = new DateTime(2023, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Number = 2,
                            AirplaneId = 2,
                            ArrivalCity = "Lviv",
                            ArrivalTime = new DateTime(2023, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartureCity = "Warsaw",
                            DepartureTime = new DateTime(2023, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("data_access_entity.Entities.ClientFligth", b =>
                {
                    b.Property<int>("FlightId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.HasKey("FlightId", "ClientId");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientFligth");

                    b.HasData(
                        new
                        {
                            FlightId = 1,
                            ClientId = 1
                        },
                        new
                        {
                            FlightId = 2,
                            ClientId = 2
                        });
                });

            modelBuilder.Entity("data_access_entity.Entities.Credentials", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Credentials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "user1",
                            Password = "123"
                        },
                        new
                        {
                            Id = 2,
                            Login = "user2",
                            Password = "321"
                        });
                });

            modelBuilder.Entity("_07_EF_example.Entities.Client", b =>
                {
                    b.HasOne("data_access_entity.Entities.Credentials", "Credentials")
                        .WithOne("Client")
                        .HasForeignKey("_07_EF_example.Entities.Client", "CredentialsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Credentials");
                });

            modelBuilder.Entity("_07_EF_example.Entities.Flight", b =>
                {
                    b.HasOne("_07_EF_example.Entities.Airplane", "Airplane")
                        .WithMany("Flights")
                        .HasForeignKey("AirplaneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airplane");
                });

            modelBuilder.Entity("data_access_entity.Entities.ClientFligth", b =>
                {
                    b.HasOne("_07_EF_example.Entities.Client", "Client")
                        .WithMany("ClientFligth")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_07_EF_example.Entities.Flight", "Flight")
                        .WithMany("ClientFligth")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("_07_EF_example.Entities.Airplane", b =>
                {
                    b.Navigation("Flights");
                });

            modelBuilder.Entity("_07_EF_example.Entities.Client", b =>
                {
                    b.Navigation("ClientFligth");
                });

            modelBuilder.Entity("_07_EF_example.Entities.Flight", b =>
                {
                    b.Navigation("ClientFligth");
                });

            modelBuilder.Entity("data_access_entity.Entities.Credentials", b =>
                {
                    b.Navigation("Client");
                });
#pragma warning restore 612, 618
        }
    }
}
